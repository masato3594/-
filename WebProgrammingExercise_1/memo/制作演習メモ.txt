★Webプログラミング3 memo

●工夫点
・headerロゴの位置をpositionで真ん中に
・headerはpositionではなく全てflexboxレイアウトで組んでほぼ真ん中に寄せる
・個人的CSS三大要素flex,grid,positionを取り入れる
・gridレイアウトは関数を採用。(レスポンシブは…)
・cssは一頁でまとめて単頁にかかるものと複数ページに充てるものを意識してクラス名を命名
→後ろのページを作っていく過程でデザインが崩れていく箇所が
多々あったが改善点は見えたので卒業制作に活かして次回工夫点で発表したい。
・複数ページに効かせるCSSは同じクラスで使いまわす(h2,grid)
・<section>直下に<div class="container-contents">で共通marginの導入ができた。
⇒途中で気が付きログインページ以降に導入したが無駄にcssの行が増えてしまったので
共通parts化の方法を変えて次回作につなげたい。

●提出までの修正点
・loginページ以降のtextのfont-sizeを1.5remに統一して見栄えを合わせる
・全体のバランス調整,クラス名の見直し文書構造は作り直し時に
・ドロワーをJs実装(ダークモード)

●織り込むpointo
・cssでheader固定＋エリアの境目でふんわり止めるギミックを追加
・font-weight: bold;の確認


●今後の課題点,反省点
0,PHPの理解が全く足りていない。。。
⇒目標課題の半分到達したところでギブアップ。
1,制作演習ラストまでに自分の記述の仕方(コーディングマイルール)を確立させる。
⇒ページの作り方,class命名,共通パーツの作り方,絶対指定と相対指定,コメントアウトのパターン等々
2,ページの作り方を頁毎にではなく先に全体を作ってコーディングしていく。
⇒後ろを作りこんでいると前が崩れる原因はセレクタの指定の仕方。
⇒先に共通パーツの作成、ページ単体で作っているからデザインが崩れる全体像をしっかりと確認。
⇒特にフォームエリア
3,レスポンシブで毎回、画像調整をpx指定したがもっと良いやり方があるはず。
・positionもpx指定。。。レスポンシブでtop:0px;で調整は〇
4,メインロゴは、親要素にrelative,logo画像にabosolute+left:50%,translateX(-50%)を指定。
これでレスポンシブ対応できる。他の要素をmarginで動かしても隣り合う要素が動くが、
position指定した要素は絶対配置なので動かない。
⇒introduction-contantsに対して◆要素の真ん中中央寄せ３パターンを全て充ててみる。
5,画像が可変しても重ねた文字の位置がずれないようにすればよいか？
⇒<div>background-imageで背景画像として表示させて文字はmargin(%指定)で表示ずれを防げる。
6,幅指定はpx,vw,%の使い分け例が欲しい⇒見出しはpxな感じ。。。。
⇒文字サイズの指定はremで確定。
7,・お気に入りボタンの実装の仕方がわからないので余裕があれば実装
⇒具体的に欲しい機能ボタンが押されたらリストに入る、消されたらボタンをもとに戻す機能。
+クリックされたときにエフェクトを追加
8,ログイン、未ログインで画像を変える⇒flexが崩れる…
<?php
$login= false;
if ($login) {
    echo '<i class="fa-solid fa-arrow-right-from-bracket"></i>';
} else {
    echo '<img src="images/pc-login.png" class="login-btn" id="login_btn" alt="ログインボタン">';
}
?>


ページ共通設定(h2,h2,grid,margin等)
・コンテンツ幅のためのmargin設定はsection配下に<div=contants-container>
・画像のサイズを一括設定する⇒HTMLにて画像サイズを指定してみる.
⇒sectionごとで細かい指定はsection+モジュール設定で指定
・paddingを3の倍数に修正して変更して視覚的に整合性を取る。
・画像を可変幅に対応させる⇒画像をwidth:100%;指定してdivに入れてmax-width100%に指定。
・商品詳細ページの数量boxとカートボタンを大きさを統一する。


・共通パーツをもっと増やせそう。h1,各種フレーム,各種ボタン,詳細ページ,・sectionの両端marginなど
⇒フレーム有と無しの2パターンがよさそう。
・<label>のcss指定はそのままやってみた
・<form>の子要素テキストとテキストボックスはどう指定するとコードが綺麗に書けるか？

⇒親要素をdiv追加class指定をして子要素に指定する。
・top固定領域も共通パーツにしたいが、パンくずナビをどう改造すれば実装できるかわからない…
・ログインページの見出しを共通設定にしたいがborder-bottom
が見出しの長さに応じてうまく長さが変わらない…width:auto;だと親の大きさに依存してしまう。
divで子要素にするのが正解か？

・基礎をある程度理解したら基礎を繰り返しやるのではなく、
実際に作ってみてわからないところを調べながら実装していくと身に付くと感じた。
⇒実装に必要な機能は全て教本に載っている安心感(P.288-ショッピングカートのページで実装)
・flex boxで並べたアイテムをpositionで移動させた時の他のアイテムの挙動を押さえる。

・最終調整でデザイン崩れの修正と正規表現の実装,フォームの改良,ドロワー機能の実装を。


●注意点
・期限は3/5(発表)迄
・Jsは完成後任意

共通基本ルール
padding:4の倍数
font-size: ベース16px,4の倍数
見出しfont-size:SP20px,PC32px
SP幅375px
PC幅1366px
PCコンテンツ幅1200px⇒margin:10vw;ずつ取る。 
font:Noto Sans JP
ブレイクポイント768pxを基準とし、その他は個人ごとに適宜設定可"
■コーディング仕様■
架空のドーナツショップ「C.C.Donuts」のショッピングサイト
"半角英数字・キャメル型で作成
※全角文字・半角カナは使用しないこと"
"HTML・CSS・JavaScript・PHP・SQL
※BootStrap・jQuery・Vue.jsの使用は自由"


■目標課題					
１．HTML / CSS を用いて、各ページを作成（レスポンシブ対応まで作成）					
２．PHPを用いて、共通部品を別ファイルで読み込むようにする					
３．XAMPPでDBの作成（使用するDBを作成するSQLコマンドは別途共有します）					
４．会員登録機能の実装					
　・正規表現を用いて「○○@○○」という文字列をメールアドレスとして登録できるようにする					
５．登録したメールアドレスとパスワードで認証するログイン機能の実装					
６．ログアウト機能実装					
７．下記、ショッピングカートの各機能の実装					
　・カート内に商品を入れる					
　・カート内の商品を一覧で参照する					
　・カート内から商品を削除する

■チャレンジ課題						
・目標課題７まで実装したページを、各自レンタルしているWEBサーバーにアップロード						
※WEBサーバーにアップする場合、別途本番環境用のDBを作成するためのSQLコマンドが必要になります。						
　この課題に到達したかたに別途共有しますので必要に応じてご報告ください。
DBの自作にチャレンジしてもらってもOKです。						
						
・サイト内検索機能を実装						
　[考えるポイント]						
　・何を検索対象にするか						
　・どのように検索対象を絞り込むか						
						
・「ショッピングカート」機能で疑似決済の実装						
　[考えるポイント]						
　教本のサンプルデータのうち、本で解説されていない機能の部分なので、						
　読み解いて実装してみましょう						
						
・DB設計をして、「クレジットカード登録」関連機能の実装						
						
※クレジットカード情報は秘匿情報に当たる情報のため、						
　特にこのページをWEBサーバーにアップロードする際は、クレカ情報を登録するページに						
　「当サイトは模擬サイトですので、実際のクレジットカード情報は登録しないでください」						
　と、目立つ形で注記として必ず掲載しておいてください。						
　加えて						
	<meta name="robots" content="noindex">					
　この一文を決済ページの<head>タグ内に追記して、検索にヒットしないような作りにしておいてください						
						
・DB設計をして、売り上げ個数に応じて変動する「人気ランキング」機能をトップページに実装									